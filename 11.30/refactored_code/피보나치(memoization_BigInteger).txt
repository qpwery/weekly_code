import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.math.BigInteger;

public class Fibonacci{
	
	public static BigInteger fibonacci(int n, BigInteger[] arr) {
		// 이미 계산된 값 반환 (memoization)
		if(!arr[n].equals(BigInteger.valueOf(-1)))	return arr[n];

		// base case
		if(n == 0)	return BigInteger.ZERO;
		else if (n == 1)	return BigInteger.ONE;

		arr[n] = fibonacci(n-1, arr).add(fibonacci(n-2, arr));
		//System.out.println(n +" : " + arr[n]);
		return arr[n];
	}

	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		
		// 배열 초기화
		BigInteger[] arr = new BigInteger[n+1];
		for(int i=0; i<=n; i++) {
			arr[i] = BigInteger.valueOf(-1); // 초기값 설정
		}
	
		System.out.println(fibonacci(n, arr));
	}
}