import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.io.IOException;

public class Blackjack {
	static int N, M, max = 0;
	static int[] arr;

	public static void blackjack() { // N개의 카드 중 3개를 뽑아 M과 가장 가까운 수 찾기
		// N개에서 중복되지 않게 3개의 카드를 뽑을 수 있도록
		for(int i=0; i<=N-3; i++) {
			int first = arr[i];
			for(int j=i+1; j<=N-2; j++) {
				int second = arr[j];
				for(int k=j+1; k<=N-1; k++) {
					int third = arr[k];
					
					if(M == (first+second+third)) { // base case
						System.out.println(M);
						return;
					}
					
					if((max < (first+second+third)) && (M > (first+second+third)))
						max = first+second+third;
				}
			}
		}
		System.out.println(max);
		return;	
	}
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		N = Integer.parseInt(st.nextToken()); // 카드 개수
		M = Integer.parseInt(st.nextToken()); // 목표 값
		
		st = new StringTokenizer(br.readLine());
		arr = new int[N]; // 카드에 쓰여있는 수
		for(int i=0; i<N; i++)	arr[i] = Integer.parseInt(st.nextToken());
		
		// 확률 조합으로 경우의 수 구하기?
		blackjack();
	}
}