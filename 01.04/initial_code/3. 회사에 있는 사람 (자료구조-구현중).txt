import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main{

    static void solution(int n, String[][] 출입기록){
        boolean[] 출입중 = new boolean[n];

        for(int i=0; i<n; i++){

            String name1 = 출입기록[i][0];
            String action1 = 출입기록[i][1];

            if(action1.equals("enter")) 출입중[i] = true;

            if(name1.equals(출입기록[i+1][0])) {

                for(int j=i+1; j<n; j++){

                    String name2 = 출입기록[j][0];
                    String action2 = 출입기록[j][1];

                    if(action2.equals("leave")){
                        출입중[i] = false;
                        break;
                    }
                }
            }

        }

        for(int i=0; i<n; i++){
            if(출입중[i]) System.out.print(출입기록[i][0] +" ");
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(br.readLine()); // 첫 번째 줄: 출입 기록 개수 N 입력

        String[][] 출입기록 = new String[n][2]; // 출입기록 배열 생성
        for(int i=0; i<n; i++){
            String[] line = br.readLine().split(" ");
            출입기록[i][0] = line[0]; // 이름
            출입기록[i][1] = line[1]; // 행동
        }

        // 출입기록 2차원 배열 정렬 (선택 정렬 사용)
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (출입기록[j][0].compareTo(출입기록[minIndex][0]) < 0) {
                    minIndex = j; // 가장 작은 값을 가진 인덱스 찾기
                }
            }
            // 배열 값 교환
            String[] temp = 출입기록[i];
            출입기록[i] = 출입기록[minIndex];
            출입기록[minIndex] = temp;
        }

        solution(n, 출입기록);
    }
}