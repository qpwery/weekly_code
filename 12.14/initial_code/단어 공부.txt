import java.util.Scanner;

public class Main{

    static void solution(String 단어, int[] cnt){

        for(int i=0; i<단어.length(); i++){
            char 알파벳 = 단어.charAt(i);
            if(알파벳 >= 65 && 알파벳 <=90) // 대문자
            {
                cnt[알파벳 - 'A'] += 1;
            }
            else if(알파벳 >= 97 && 알파벳 <= 122) // 소문자
            {
                cnt[알파벳 - 'a'] += 1;
            }
        }

        // 아래 부분은 블로그 참고
        // 배열의 원소들 값 비교하여 가장 큰 값을 갖고있는 인덱스의 문자 출력하는 부분
        int max = -1;
        char ch = '?';
        for(int i=0; i<26; i++){
            if(cnt[i] > max){
                max = cnt[i];
                ch = (char) (i +65); // 대문자 출력
            }
            else if(cnt[i] == max){
                ch = '?';
            }
        }
        System.out.println(ch);
        return;
    }

    // step1: 입력) 알파벳 대소문자로 이루어진 단어 (단어의 길이 1,000,000 넘지 않음)
    // step2: 단어 배열로 받고, 아스키코드와 인덱스 활용하여 알파벳 개수 체크 및 저장
    // step3: 최악의 경우 O(N) && 데이터 입력 크기 1,000,000: 1초 넘음 / 문제에서는 시간제한 2초
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        String 단어 = scanner.next();

        int[] cnt = new int[26];
        solution(단어, cnt);
    }
}