import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.StringTokenizer;

public class Main{

    static void solution(int A, int B, HashMap<String, Integer> Aarr, HashMap<String, Integer> Barr){
        int cnt = 0; // 출력용

        // 1. A - B
        for(String key: Aarr.keySet())
        {
            if(!Barr.containsKey(key)) cnt++;
        }

        // 2. B - A
        for(String key: Barr.keySet())
        {
            if(!Aarr.containsKey(key)) cnt++;
        }

        System.out.println(cnt);
    }

    public static void main(String[] args) throws IOException {
        HashMap<String, Integer> Aarr = new HashMap<>();
        HashMap<String, Integer> Barr = new HashMap<>();

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int A = Integer.parseInt(st.nextToken());
        int B = Integer.parseInt(st.nextToken());

        st = new StringTokenizer(br.readLine());
        for(int i=0; i<A; i++) Aarr.put(st.nextToken(), 0);

        st = new StringTokenizer(br.readLine());
        for(int i=0; i<B; i++) Barr.put(st.nextToken(), 0);

        solution(A, B, Aarr, Barr);
    }
}