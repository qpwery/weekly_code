import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main{

    static void solution(String s) {
        int x = s.length(); // 문자열의 길이 (반복 횟수를 결정)
        int cnt = 0; // 현재 자르는 단어의 길이
        int output = 0; // 서로 다른 부분 문자열의 총 개수 (출력용)

        // 자를 단어의 길이를 1씩 늘리며(cnt), 문자열 길이에 따라 반복 횟수 줄임(x)
        while(x > 0){
            cnt++; // 자를 문자열의 길이 증가
            String[] arr = new String[x]; // 현재 길이에 맞는 문자열 저장할 배열

            for(int i=0; i<x; i++){
                arr[i] = s.substring(i, i+cnt);
                output++;
            }

            // 배열 내에서 중복된 문자열 제거를 위해 중복 확인
            Arrays.sort(arr); // 배열 정렬 (중복된 문자열 연속적으로 나타남)
            for(int i=0; i<x-1; i++){
                if(arr[i].equals(arr[i+1])) output--; // 중복된 문자열 발견 시 총 개수에서 감소 (출력용)
            }

            x--; // 다음 반복에서 다룰 문자열 반복 횟수 줄임
        } // while문

        // 출력
        System.out.println(output);
    }

    public static void main(String[] args) throws Exception{

        // step1: 문자열 S (소문자, 길이는 1,000 이하)
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String s = br.readLine();

        solution(s);
    }
}